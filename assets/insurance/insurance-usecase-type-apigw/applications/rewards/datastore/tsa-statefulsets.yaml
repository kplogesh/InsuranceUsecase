apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: rewards-datastore
  namespace: insurance
  labels:
    app: rewards
spec:
  serviceName: rewards-datastore
  replicas: 1
  selector:
    matchLabels:
      app: rewards
      name: rewards-datastore
      version: 4.4.0
  template:
    metadata:
      labels:
        app: rewards
        name: rewards-datastore
        version: 4.4.0
    spec:
      terminationGracePeriodSeconds: 10
      containers:    
        - name: terracotta-bigmemory-server
          image: sagcr.azurecr.io/bigmemorymax-server:4.4.0
          imagePullPolicy: IfNotPresent
          env:
          - name: ACCEPT_EULA
            value: "Y"
          resources:
            limits:
              cpu: "2"
              memory: "4Gi" 
            requests:
              cpu: "0.25"
              memory: "2Gi"
          readinessProbe:
            exec:
              # Handling 400 status as well as in case of PASSIVE(terracotta-0) and ACTIVE(terracotta-1) startup scenario there is a deadlock.
              command: ["sh", "-c", "status_code=$(curl -o /dev/null --silent --write-out '%{http_code}\n' http://localhost:9540/tc-management-api/agents); if [ $status_code -eq \"200\" ] || [ $status_code -eq \"400\" ]; then exit 0; fi; exit 1"]
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            # 10,000 as failure threshold gives around 41 hours of time to load from FRS and start terracotta successfully.
            failureThreshold: 10000
          ports:
            - containerPort: 9510
              name: server
            - containerPort: 9530
              name: replication
            - containerPort: 9540
              name: management
          volumeMounts:
            - name: rewards-datastore
              mountPath: /data/diskstore
            - name: rewards-datastore
              mountPath: /data/backups
            - name: rewards-datastore
              mountPath: /data/logs
            - name: rewards-datastore
              mountPath: /data/logs/clients
            - name: config-volume
              mountPath: /configs/tc-config.xml
              subPath: tc-config.xml
            - name: license-volume
              mountPath: /licenses/license.key
              subPath: license.key
      volumes:
        - name: config-volume
          configMap:
            name: rewards-tc-bm-config
        - name: license-volume
          configMap:
            name: webmethodslicensekeys
      imagePullSecrets:
        - name: sagregcred             
  volumeClaimTemplates:
  - metadata:
      name: rewards-datastore
      labels:
        type: hostPath
    spec:
      accessModes: 
      - ReadWriteOnce
      storageClassName: local-path
      resources:
        requests:
          storage: 2Gi