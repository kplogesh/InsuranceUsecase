pipeline {
    agent any 
    stages {
        stage('DEV - TN Export Task - K8S') 
        { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh '''
                        kubectl config set-context --current --namespace=insurance
                        kubectl exec deploy/tradingnetworks -- bash -c "cd /opt/softwareag/IntegrationServer/packages/WmTN/bin;./tnexport.sh -bin ExportedData.bin -all;cat ExportedData.bin" > ExportedData.bin                   
                    '''
                }
            }
        }               
        stage('Staging - TN Import Job - K8S') 
        { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh '''
                        kubectl config set-context --current --namespace=insurance
                        kubectl delete configmap tn-data-load
                        kubectl create configmap tn-data-load --from-file=ExportedData.bin
                        cd assets/insurance/insurance-usecase-type-apigw-extes/applications/tradingnetworks/staging/manifests/job
                        sed -i "s/<TAG>/${BUILD_NUMBER}/" asset-import-job.yaml
                        kubectl apply -f ../tn-appconfig.yaml -f ../tn-env-script-cm.yaml -f .
                        kubectl get po
                    '''
                }
            }
        }
        stage('Build Image') 
        { 
            steps 
            {
                sh "chmod +x -R ${env.WORKSPACE}"
                sh '''      
                    assets/insurance/pipeline/common.lib/build.sh ${BUILD_NUMBER}
                '''
            }
        }         
        stage('Staging - Deploy MSR - K8S') { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh '''
                        kubectl config set-context --current --namespace=insurance
                        cd assets/insurance/insurance-usecase-type-apigw-extes/applications/tradingnetworks/staging/manifests
                        sed -i "s/<TAG>/${BUILD_NUMBER}/" tn-deployment.yaml
                        kubectl apply -f .
                        kubectl get po
                    '''
                }
            }
        }
    }
}