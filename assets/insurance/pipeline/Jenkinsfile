pipeline {
    agent any 
    stages {
        stage('Build Image') 
        { 
            steps 
            {
                sh "chmod +x -R ${env.WORKSPACE}"
                sh '''      
                    assets/insurance/pipeline/stages/build/build.sh ${BUILD_NUMBER}
                '''
            }
        }
        stage('Staging - TN Export Task - K8S') 
        { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh '''
                        kubectl config set-context --current --namespace=insurance
                        kubectl exec deploy/tradingnetworks -- cd /opt/softwareag/IntegrationServer/packages/WmTN/bin | ./tnexport.sh -bin ExportedData-${BUILD_NUMBER}.bin -all
                    '''
                }
            }
        }        
        stage('Staging - TN Import Job - K8S') 
        { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh '''
                        kubectl config set-context --current --namespace=insurance
                        cd assets/insurance/insurance-usecase-type-apigw-extes/applications/tradingnetworks/staging/manifests/job
                        sed -i "s/<TAG>/${BUILD_NUMBER}/" asset-import-job.yaml
                        kubectl apply -f ../tn-appconfig.yaml
                        kubectl apply -f .
                        kubectl get po
                    '''
                }
            }
        }
        stage('Staging - Deploy MSR - K8S') { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh '''
                        kubectl config set-context --current --namespace=insurance
                        cd assets/insurance/insurance-usecase-type-apigw-extes/applications/tradingnetworks/staging/manifests
                        sed -i "s/<TAG>/${BUILD_NUMBER}/" tn-deployment.yaml
                        kubectl apply -f .
                        kubectl get po
                    '''
                }
            }
        }
    }
}